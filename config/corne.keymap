/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    macros {
        Mute_BT1: Mute_BT1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&out OUT_BLE>,
                <&macro_wait_time 20>,
                <&kp C_MUTE>,
                <&macro_wait_time 20>,
                <&out OUT_USB>;

            label = "MUTE_BT1";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB        &kp Q  &kp W  &kp F     &kp P      &kp B        &kp J       &kp L  &kp U      &kp Y    &kp SEMICOLON  &kp BSPC
&mt LCTRL ESC  &kp A  &kp R  &kp S     &kp T      &kp G        &kp M       &kp N  &kp E      &kp I    &kp O          &kp SQT
&kp LSHFT      &kp Z  &kp X  &kp C     &kp D      &kp V        &kp K       &kp H  &kp COMMA  &kp DOT  &kp FSLH       &kp ENTER
                             &kp LGUI  &lt 1 RET  &kp SPACE    &kp LSHIFT  &mo 2  &mo 3
            >;
        };

        symbol_layer {
            bindings = <
&kp TAB    &kp EXCL   &kp AT_SIGN  &kp HASH      &kp DOLLAR     &kp PERCENT    &trans   &trans  &Mute_BT1  &trans  &trans  &kp DELETE
&kp LALT   &kp LC(A)  &kp LC(S)    &kp ASTERISK  &kp AMPERSAND  &kp CARET      &trans   &trans  &trans     &trans  &trans  &trans
&kp LSHFT  &kp LC(Z)  &kp LC(X)    &kp LC(C)     &trans         &kp LC(V)      &trans   &trans  &trans     &trans  &trans  &trans
                                   &trans        &none          &trans         &kp RET  &mo 4   &trans
            >;
        };

        number_layer {
            bindings = <
&kp GRAVE      &kp TILDE         &trans         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDER    &kp MINUS        &kp KP_NUMBER_7  &kp KP_N8        &kp KP_N9        &kp KP_DOT       &kp LC(BACKSPACE)
&kp LESS_THAN  &kp GREATER_THAN  &kp PIPE       &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp EXCL     &kp PLUS         &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_N6        &kp EQUAL        &trans
&trans         &trans            &kp BACKSLASH  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans       &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_ASTERISK  &trans
                                                &trans                &mo 4                  &trans       &trans           &none            &trans
            >;
        };

        Macro_Layer {
            bindings = <
&trans  &trans  &trans              &mmv MOVE_y(1000)   &trans             &trans                 &kp F13           &kp F14   &kp C_MUTE    &kp C_VOL_UP  &kp C_VOL_DN  &trans
&trans  &trans  &mmv MOVE_x(-1000)  &mmv MOVE_y(-1000)  &mmv MOVE_x(1000)  &trans                 &kp LEFT          &kp DOWN  &kp UP_ARROW  &kp RIGHT     &kp F18       &trans
&trans  &trans  &trans              &trans              &trans             &trans                 &kp LS(LG(LEFT))  &kp F22   &kp F21       &kp F20       &kp F19       &trans
                                    &trans              &trans             &trans                 &trans            &trans    &trans
            >;
        };

        mouse_layer {
            bindings = <
&soft_off    &trans        &msc MOVE_LEFT  &mmv MOVE_UP    &msc MOVE_RIGHT  &msc MOVE_UP      &bl BL_TOG    &trans     &trans     &trans  &trans  &trans
&bootloader  &trans        &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc MOVE_DOWN    &out OUT_TOG  &mkp LCLK  &mkp RCLK  &trans  &trans  &bootloader
&bt BT_CLR   &bt BT_SEL 4  &bt BT_SEL 3    &bt BT_SEL 2    &bt BT_SEL 1     &bt BT_SEL 0      &trans        &trans     &trans     &trans  &trans  &trans
                                           &trans          &trans           &out OUT_TOG      &trans        &trans     &trans
            >;
        };
    };
};
