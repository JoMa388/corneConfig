/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/mouse.h>
/ {
    macros {
        left_window: left_window {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LS(LG(LEFT))>;
            label = "LEFT_WINDOW";
        };

        right_window: right_window {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LS(LG(RIGHT))>;
            label = "RIGHT_WINDOW";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB        &kp Q  &kp W  &kp F     &kp P      &kp B        &kp J       &kp L  &kp U      &kp Y    &kp SEMICOLON  &kp BSPC
&mt LCTRL ESC  &kp A  &kp R  &kp S     &kp T      &kp G        &kp M       &kp N  &kp E      &kp I    &kp O          &kp RET
&kp LSHFT      &kp Z  &kp X  &kp C     &kp D      &kp V        &kp K       &kp H  &kp COMMA  &kp DOT  &kp FSLH       &mo 4
                             &kp LGUI  &lt 1 RET  &kp SPACE    &kp LSHIFT  &mo 2  &mo 5
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT_SIGN  &kp HASH      &kp DOLLAR     &kp PERCENT    &kp MINUS  &kp UNDERSCORE     &trans            &trans     &trans    &kp DELETE
&kp LALT   &trans    &trans       &kp ASTERISK  &kp AMPERSAND  &kp CARET      &kp PLUS   &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE  &kp COLON  &kp SEMI  &trans
&kp LSHFT  &trans    &trans       &trans        &trans         &kp LSHIFT     &trans     &trans             &trans            &trans     &trans    &trans
                                  &trans        &trans         &trans         &kp RET    &mo 3              &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &trans  &trans  &kp LPAR          &kp RIGHT_PARENTHESIS  &kp UNDERSCORE    &kp F13       &kp F14   &kp C_MUTE    &kp C_VOL_UP  &kp C_VOL_DN  &kp LC(BACKSPACE)
&kp TILDE  &trans  &trans  &kp LEFT_BRACE    &kp RIGHT_BRACE        &kp PIPE          &kp LEFT      &kp DOWN  &kp UP_ARROW  &kp RIGHT        &trans        &trans
&kp LSHFT  &trans  &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET      &kp BACKSLASH     &left_window  &kp F19   &kp F18       &right_window    &trans        &trans
                           &kp LGUI          &mo 3                  &kp SPACE         &kp RET       &trans    &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&soft_off    &trans        &trans        &mmv MOVE_UP        &trans                  &msc MOVE_UP       &trans     &trans     &trans  &trans  &trans  &trans
&bootloader  &trans        &mmv MOVE_LEFT&mmv MOVE_DOWN      &mmv MOVE_RIGHT         &msc MOVE_DOWN     &out OUT_TOG  &mkp LCLK  &mkp RCLK  &trans  &trans  &bootloader
&bt BT_CLR   &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0    &trans             &trans     &trans     &trans  &trans  &trans
                                         &trans        &trans        &out OUT_TOG                       &trans     &trans     &trans
            >;
        };

        numpad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp MINUS        &kp KP_NUMBER_7  &kp KP_N8        &kp KP_N9        &kp KP_DOT  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp EQUAL        &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_N6        &trans      &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans      &trans
                        &trans  &trans  &trans    &trans           &trans           &trans
            >;
        };

        Macro_Layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &rgb_ug RGB_TOG    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans             &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans             &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans             &trans  &trans  &trans
            >;
        };
    };
};
